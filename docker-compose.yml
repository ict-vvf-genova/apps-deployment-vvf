name: "apps"
version: "3.8"
services:

  caddy:
    image: "docker.io/caddy:2.7"
    container_name: "apps-caddy"
    restart: "always"
    networks:
      - "public"
      - "private"
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
    volumes:
      - "${CONFDIR:?}/caddy/Caddyfile:/etc/caddy/Caddyfile:Z"  # config
      - "${CERTDIR:?}/:/etc/certs/:Z"  # certificates
      - "${DATADIR:?}/caddy/data/:/data/:Z"
      - "${DATADIR:?}/caddy/config/:/config/:Z"
      - "${WEBDIR:?}/:/web/:ro"  # webserver
    environment:
      DOMAIN: "${DOMAIN:?}"

  dex:
    image: "ghcr.io/ict-vvf-genova/dex-smtp:master"
    container_name: "apps-dex"
    restart: "always"
    networks:
      - "public"
      - "private"
    volumes:
      - "./config/dex/config.yaml:/etc/dex/config.yaml:ro"
    environment:
      DEX_LOGLEVEL: "${DEX_LOGLEVEL:?}"
      DOMAIN: "${DOMAIN:?}"
      DEX_ADMIN_ONLY: "${DEX_ADMIN_ONLY:?}"
      ADMIN_EMAIL: "${ADMIN_EMAIL:?}"
      DEFAULT_PASSWORD_HASH: "${DEFAULT_PASSWORD_HASH:?}"
      GRIST_OAUTH_CLIENT_SECRET: "${GRIST_OAUTH_CLIENT_SECRET:?}"
      DEX_LOGO_URL: "${DEX_LOGO_URL:?}"
      DEX_SMTP_NAME: "${DEX_SMTP_NAME:?}"
      DEX_SMTP_ID: "${DEX_SMTP_ID:?}"
      DEX_SMTP_HOST: "${DEX_SMTP_HOST:?}"
      DEX_SMTP_DOMAIN: "${DEX_SMTP_DOMAIN:?}"
      DEX_SMTP_LABEL: "${DEX_SMTP_LABEL:?}"
    command: ["dex", "serve", "/etc/dex/config.yaml"]
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5556/healthz"]
      start_period: "5m"
      interval: "10s"
      timeout: "5s"
      retries: 2

  redis:
    image: "docker.io/redis:7-bookworm"
    container_name: "apps-redis"
    restart: "always"
    networks:
      - "private"
    volumes:
      - "${CONFDIR:?}/redis/redis.conf.sh:/etc/redis/redis.conf.sh:ro"
      - "${DATADIR:?}/redis/:/data/:Z"
    environment:
      REDIS_LOGLEVEL: "${REDIS_LOGLEVEL:?}"
      REDIS_AUTH: "${DEFAULT_PASSWORD:?}"
    command: ["sh", "-euc", "sh /etc/redis/redis.conf.sh | exec redis-server -"]
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping | grep -q PONG"]
      start_period: "5m"
      interval: "10s"
      timeout: "5s"
      retries: 2

  minio:  # FIXME log?
    image: "docker.io/minio/minio:RELEASE.2024-01-18T22-51-28Z"
    container_name: "apps-minio"
    restart: "always"
    networks:
      - "private"
    volumes:
      - "${DATADIR:?}/minio/:/data/"
    environment:
      MINIO_ROOT_USER: "minio"
      MINIO_ROOT_PASSWORD: "${DEFAULT_PASSWORD:?}"
      MINIO_VOLUMES: "/data/"
      MINIO_BROWSER: "off"
    command: ["server", "--address", ":9000"]
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      start_period: "5m"
      interval: "10s"
      timeout: "5s"
      retries: 2

  minio-init:
    image: "docker.io/minio/mc:RELEASE.2024-01-18T07-03-39Z"
    container_name: "apps-minio-init"
    restart: "on-failure"
    networks:
      - "private"
    volumes:
      - "${CONFDIR:?}/minio/init.sh:/init.sh:ro"
      - "${CONFDIR:?}/minio/policies/:/policies/:ro"
    environment:
      MINIO_ROOT_PASSWORD: "${DEFAULT_PASSWORD:?}"
      MINIO_GRIST_PASSWORD: "${DEFAULT_PASSWORD:?}"
    entrypoint: "/init.sh"
    depends_on:
      minio:
        condition: "service_healthy"

  grist:
    image: "docker.io/gristlabs/grist:1.1.11"
    container_name: "apps-grist"
    restart: "always"
    volumes:
      - "${CERTDIR:?}/:/etc/certs/:Z"  # certificates
      - "${DATADIR:?}/grist/:/persist/:Z"
    environment:
      DEBUG: ${GRIST_DEBUG:?}
      APP_HOME_URL: "https://grist.${DOMAIN:?}"
      GRIST_SESSION_SECRET: "${GRIST_SESSION_SECRET:?}"
      GRIST_SINGLE_ORG: "${GRIST_SINGLE_ORG:?}"
      GRIST_DEFAULT_EMAIL: "${ADMIN_EMAIL:?}"
      GRIST_SUPPORT_EMAIL: "${SUPPORT_EMAIL:?}"
      # Predefined  # FIXME custom widgets not listed, but callable, no proxy?
      GRIST_SANDBOX_FLAVOR: "gvisor"
      GRIST_PAGE_TITLE_SUFFIX: "_blank"
      GRIST_TELEMETRY_LEVEL: "off"
      GRIST_MAX_UPLOAD_ATTACHMENT_MB: "10"
      GRIST_MAX_UPLOAD_IMPORT_MB: "50"
      GRIST_THROTTLE_CPU: "true"
      # OIDC Authentication
      GRIST_OIDC_IDP_ISSUER: "https://dex.${DOMAIN:?}/.well-known/openid-configuration"
      GRIST_OIDC_IDP_CLIENT_ID: "grist"
      GRIST_OIDC_IDP_CLIENT_SECRET: "${GRIST_OAUTH_CLIENT_SECRET:?}"
      GRIST_OIDC_IDP_SCOPES: "openid email profile"
      GRIST_OIDC_IDP_SKIP_END_SESSION_ENDPOINT: "true"
      NODE_EXTRA_CA_CERTS: "/etc/certs/rootCA.pem"  # trust dex
      #GRIST_FORCE_LOGIN: "true"  # no unauthenticated users
      #GRIST_SUPPORT_ANON: "false"  # no anonymous users
      # Redis
      REDIS_URL: "redis://:${DEFAULT_PASSWORD:?}@redis:6379/1"
      # Minio
      GRIST_DOCS_MINIO_ENDPOINT: "minio"  # FIXME MINIO compare not working
      GRIST_DOCS_MINIO_PORT: "9000"
      GRIST_DOCS_MINIO_USE_SSL: "0"
      GRIST_DOCS_MINIO_BUCKET: "grist"
      GRIST_DOCS_MINIO_ACCESS_KEY: "grist"
      GRIST_DOCS_MINIO_SECRET_KEY: "${DEFAULT_PASSWORD:?}"
    networks:
      - "public"
      - "private"
    healthcheck:
      test: ["CMD", "bash", "-euc", ">/dev/tcp/localhost/8484"]
      start_period: "5m"
      interval: "10s"
      timeout: "5s"
      retries: 2
    depends_on:
      dex:
        condition: "service_healthy"
      redis:
        condition: "service_healthy"
      minio:
        condition: "service_healthy"
      minio-init:
        condition: "service_completed_successfully"

  nodered:
    image: "docker.io/nodered/node-red:latest"
    container_name: "apps-nodered"
    restart: "always"
    volumes:
      - "${CERTDIR:?}/:/etc/certs/:Z"  # certificates
      - "./config/nodered/settings.js:/data/settings.js:ro"  # settings
      - "./data/nodered/:/data/:Z"
    user: "0:0"
    environment:
      NODERED_LOGLEVEL: "${NODERED_LOGLEVEL:?}"
      NODERED_SESSION_SECRET: "${NODERED_SESSION_SECRET:?}"
      NODERED_ADMIN: "${NODERED_ADMIN:?}"
      NODERED_PASSWORD_HASH: "${NODERED_PASSWORD_HASH:?}"
      TZ: "Europe/Rome"
      NODE_EXTRA_CA_CERTS: "/etc/certs/rootCA.pem"  # trust grist
    networks:
      - "public"
      - "private"

networks:

  public:
    name: "apps-public"
    internal: false

  private:
    name: "apps-private"
    internal: true
